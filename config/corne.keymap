/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kt F11  &kt F12
&kp LSHFT   &kp F1        &kt F2        &kt F3        &kt F4        &kt F5          &kt F6    &kt F7    &kt F8    &kt F9     &kt F10  &kt ESCAPE
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &to 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL   &kp QUESTION  &kp AT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp CARET    &kp AMPS    &kp KP_MULTIPLY  &kp EQUAL  &kp MINUS  &kp BSPC
&kp LCTRL  &kt GRAVE  &kt SLASH     &kt BSLH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kt PERCENT  &kt DOLLAR  &trans           &trans     &trans     &trans
&kp LSHFT  &trans     &trans        &kt HASH  &trans                &trans                   &trans       &trans      &trans           &trans     &trans     &trans
                                    &kp LGUI  &to 3                 &kp SPACE                &kp RET      &trans      &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans           &trans             &trans                &trans                &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kt K_MUTE  &kt C_VOLUME_UP  &kt C_VOLUME_DOWN  &kt C_BRIGHTNESS_INC  &kt C_BRIGHTNESS_DEC  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans           &trans             &trans                &trans                &trans
                        &trans  &trans  &trans    &trans      &trans           &trans
            >;
        };
    };
};
